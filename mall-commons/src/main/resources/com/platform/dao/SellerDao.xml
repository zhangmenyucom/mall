<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mall.dao.SellerDao">
    <select id="queryObject" resultType="com.mall.entity.SellerEntity">
		select * from seller where id = #{value}
	</select>

    <select id="queryList" resultType="com.mall.entity.SellerEntity">
        select u.*, (select d.name from sys_dept d where d.dept_id = u.dept_id) deptName from seller u
        <where>
            <if test="createUserId != null">
                and `create_user_id` = #{createUserId}
            </if>
            <if test="username != null and username.trim() != ''">
                and u.`username` like concat('%',#{username},'%')
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by u.${sidx} ${order}
            </when>
            <otherwise>
                order by u.dept_id asc,u.id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryListByBean" resultType="com.mall.entity.UserWindowDto">
        select
        id,username name,dept_Id
        from seller
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND username LIKE concat('%',#{name},'%')
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from seller
        <where>
            <if test="createUserId != null">
                and `create_user_id` = #{createUserId}
            </if>
            <if test="username != null and username.trim() != ''">
                and `username` like concat('%',#{username},'%')
            </if>
            <if test="status != null and status.trim() != ''">
                and `status` = #{status}
            </if>
        </where>
    </select>

    <!-- 查询用户的所有权限 -->
    <select id="queryAllPerms" resultType="string">
		select perms  from sys_menu
		where menu_id in (select distinct rm.menu_id from sys_role_menu  rm
              LEFT JOIN sys_user_role ur on ur.role_id = rm.role_id
              LEFT JOIN sys_role_dept d on d.role_id=rm.role_id
              LEFT JOIN seller s on s.dept_id=d.dept_id
		      where s.id =#{userId}) and perms is not null

	</select>

    <!-- 查询用户的所有菜单ID -->
    <select id="queryAllMenuId" resultType="long">
          select distinct rm.menu_id from sys_role_menu  rm
              LEFT JOIN sys_user_role ur on ur.role_id = rm.role_id
              LEFT JOIN sys_role_dept d on d.role_id=rm.role_id
              LEFT JOIN seller s on s.dept_id=d.dept_id
		  where s.id =#{userId}
	</select>

    <select id="queryByUserName" resultType="com.mall.entity.SellerEntity">
		select * from seller where username = #{username}
	</select>

    <insert id="save" parameterType="com.mall.entity.SellerEntity" useGeneratedKeys="false" keyProperty="id">
		insert into seller
		(
			`id`,
			`username`, 
			`password`, 
			`email`, 
			`mobile`, 
			`status`, 
			`create_user_id`,
			`dept_id`,
			`create_time`
		)
		values
		(
			#{id},
			#{username}, 
			#{password}, 
			#{email}, 
			#{mobile}, 
			#{status}, 
			#{createUserId},
			#{deptId},
			#{createTime}
		)
	</insert>

    <update id="update" parameterType="com.mall.entity.SellerEntity">
        update seller
        <set>
            <if test="username != null">`username` = #{username},</if>
            <if test="email != null">`email` = #{email},</if>
            <if test="mobile != null">`mobile` = #{mobile},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="deptId != null">`dept_id` = #{deptId},</if>
        </set>
        where id = #{id}
        <if test="createUserId != null">
            and `create_user_id` = #{createUserId}
        </if>
    </update>

    <update id="updatePassword" parameterType="map">s
		update seller set `password` = #{newPassword}
			where id = #{userId} and password = #{password}
	</update>

    <delete id="deleteBatch">
        delete from seller where id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
        ;
        delete from sys_user_role where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>